@model OxPollen.ViewModels.Taxon.TaxonIndexViewModel

@{
    ViewBag.Title = "Reference Collection";
    var rank = Context.Request.Query["rank"];
    string rankFilter;
    if (rank.Count == 0) { rankFilter = "Genus"; } else { rankFilter = rank.FirstOrDefault(); };
}

@section homepageHeader {
    <div class="addgrain-section headsection">
        <div class="container">
            <h2>Reference Collection</h2>
            <p>
                This collection contains pollen taxa that have been identified by participants in the Global Pollen Project, as well as digitised collections from around the world.
            </p>
        </div>
    </div>
    <br />
}

@section scripts {
    <script src="~/lib/bootstrap/js/collapse.js"></script>
    <script src="~/lib/bootstrap/js/transition.js"></script>
}

@* Breadcrumb *@
<div class="row">
    <div class="col-md-12">
        <ol class="breadcrumb">
            <li><a asp-action="Index" asp-controller="Home">Home</a></li>
            <li>Pollen Reference Collection</li>
        </ol>
    </div>
</div>

@* Filters *@
<div class="row">
    <div class="col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading">Display</div>
            <div class="panel-body">
                <span>Taoxnomic Rank: </span>
                <div class="dropdown" style="display:inline;">
                    <button class="btn btn-default dropdown-toggle" type="button" id="filterMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                        @rankFilter
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="filterMenu">
                        <li><a href="@Url.Action("Index", new { rank = Taxonomy.Species })">Species</a></li>
                        <li><a href="@Url.Action("Index", new { rank = Taxonomy.Genus })">Genus</a></li>
                        <li><a href="@Url.Action("Index", new { rank = Taxonomy.Family })">Family</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading"><span class="glyphicon glyphicon-search" aria-hidden="true"></span> Search</div>
            <div class="panel-body">
                @using (Html.BeginForm("Index", "Taxon", FormMethod.Get, new { @class = "form-inline" }))
                {
                    <div class="form-group">
                        <input asp-for="Query" class="form-control" placeholder="Latin Name" />
                    </div>
                    <button type="submit" class="btn btn-primary">Go</button>
                }
            </div>
        </div>
    </div>
</div>

<p>
    <strong>Key: </strong>
    <span class="glyphicon glyphicon-user">  </span> = User Submissions with Confirmed Identity;
    <span class="glyphicon glyphicon-globe">  </span> = Digitised Reference Slides;
    <span class="glyphicon glyphicon-th-list">  </span> = Child Taxa

</p>

<div class="row">
    @foreach (var taxon in Model.Taxa)
    {
        <div class="col-md-6">
            <div class="taxon-list-item">
                <div class="img-container">
                    @if (!string.IsNullOrEmpty(taxon.ImageFilename))
                    {
                        <img src="@taxon.ImageFilename" />
                    }
                </div>
                <div class="taxon-details">
                    <a href="@Url.Action("View", new { id = @taxon.Id } )">
                        <h3>@taxon.LatinName</h3>
                    </a>
                    <ul class="list-inline">
                        <li><span class="glyphicon glyphicon-user"></span>  @taxon.UserSubmissionsConfirmedCount</li>
                        <li><span class="glyphicon glyphicon-globe"></span> @taxon.ReferenceGrainsCount</li>
                        <li><span class="glyphicon glyphicon-th-list"></span> @taxon.Children.Count</li>
                    </ul>
                </div>
                @if (taxon.Children.Count > 0)
                {
                    <div class="taxon-toggle">
                        <a class="subtaxa-button" role="button" data-toggle="collapse" data-parent="#accordion" href="#taxon-@taxon.Id" aria-expanded="false" aria-controls="taxon-@taxon.Id"><span class="glyphicon glyphicon-th-list"></span></a>
                    </div>
                }
                <ul id="taxon-@taxon.Id" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
                    @foreach (var subTaxa in taxon.Children.OrderBy(m => m.LatinName))
                    {
                        <li>
                            <a href="@Url.Action("View", "Taxon", new { id = subTaxa.Id})">@subTaxa.LatinName</a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    }
</div>
<div class="row">
    <div class="col-md-12">

        <nav>
            <ul class="pagination">
                @if (Model.CurrentPage > 1)
                {
                    <li>
                        <a href="@Url.Action("Index", new { rank = Model.Rank, query = Model.Query, p = (Model.CurrentPage - 1) })" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }
                @for (int i = 1; i <= Model.NumberOfPages; i++)
                {
                    if (i == Model.CurrentPage)
                    {
                        <li class="active"><a href="@Url.Action("Index", new { rank = Model.Rank, query = Model.Query, p = i })">@i</a></li>
                    }
                    else
                    {
                        <li><a href="@Url.Action("Index", new { rank = Model.Rank, query = Model.Query, p = i })">@i</a></li>
                    }
                }
                @if (Model.CurrentPage < Model.NumberOfPages)
                {
                    <li>
                        <a href="@Url.Action("Index", new { rank = Model.Rank, query = Model.Query, p = (Model.CurrentPage + 1) })" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>